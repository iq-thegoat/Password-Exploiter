from PyQt5 import QtWidgets
from PyQt5.QtWidgets import QDialog,QApplication,QPushButton,QListWidget,QMainWindow
from PyQt5.uic import loadUi
from PyQt5 import QtGui
from PyQt5.QtCore import QSize
import requests
from tkinter import filedialog as fd
import sys
import os
import random

try:
    os.mkdir(f"{wd}\\results")
except:
    pass

class main(QMainWindow):
    def __init__(self) -> None: 
        super(main,self).__init__()
        loadUi("ui\\main.ui",self)
        try:
            self.importt.clicked.connect(self.loadingfile)
        except:
            pass
        try:
            self.start.clicked.connect(self.main_operation)
        except:
            pass
    def resizeEvent(self,event: QtGui.QResizeEvent) ->None:
        try:
            old_size= event.oldSize()
            new_size= QSize(self.geometry().width(),self.geometry().height())
        except:
            pass
        try:
            QMainWindow.resizeEvent(self,event)
        except:
            pass
    def loadingfile(self):
        try:
            self.loadedlen.setText(str(""))
            self.OPERATION.setText(str(""))
            self.editedlen.setText(str(""))
            self.OPERATION.setText(str("LOADING FILE"))
            global File
            File = fd.askopenfile().name.replace('"','')
        except:
            pass
        try:
            global openfile
            global filelength
            filelength = 0
            openfile = open(File,"r",encoding="utf-8")
        except:
            pass
            for line in openfile:
                try:
                    self.loadedlist.addItem(line)
                    filelength = filelength+1
                except:
                    pass
                try:
                    self.loadedlen.setText(str(f"loaded {str(filelength)} lines"))
                    self.OPERATION.setText(str("FILE LOADED SUCCESSFULLY"))
                except:
                    pass
    def main_operation(self):
        try:
            wd = os.getcwd()
            listt = []
        except:
            pass
        try:
            afterlen=0            
            k = open("EDITED.txt","a",encoding="utf-8")
        except:
            pass
        try:
            openfile = open(File,"r",encoding="utf-8") 
            self.OPERATION.setText(str("EDITING FILE")) 
        except:
            pass    
            for line in openfile:
                try:
                        listt.append(str(line.split(":")[0])+":"+str(line.split(":")[1]).strip().capitalize()+"!"+"\n")
                        listt.append(str(line.split(":")[0])+":"+str(line.split(":")[1]).strip().capitalize()+"123"+"\n")
                        listt.append(str(line.split(":")[0])+":"+str(line.split(":")[1]).strip().capitalize()+"1"+"\n")
                        listt.append(str(line.split(":")[0])+":"+str(line.split(":")[1]).strip().capitalize()+"\n")
                        listt.append(str(line.split(":")[0])+":"+str(line.split(":")[1]).strip()+"!"+"\n")
                        listt.append(str(line.split(":")[0])+":"+str(line.split(":")[1]).strip()+"123"+"\n")
                        listt.append(str(line.split(":")[0])+":"+str(line.split(":")[1]).strip()+"1"+"\n")
                        listt.append(line+"\n")
                except:
                    pass
            random.shuffle(listt)
            t = 0
        try:
            for line in listt:
                k.write(line.strip()+"\n")
                self.outlist.addItem(line.strip())
                t= t+1
        except:
            pass
        try:
            self.editedlen.setText(str(f"DUMPED {str(t)} HQlines"))
            self.OPERATION.setText(str(" DRINKING WATER"))
        except:
            pass
            
app = QApplication(sys.argv)
mainwindow = main()
mainwindow.setWindowTitle("GOATAIO")
mainwindow.show()
sys.exit(app.exec_())
if __name__ == '__main__':
    main()